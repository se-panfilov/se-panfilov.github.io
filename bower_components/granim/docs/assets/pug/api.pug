doctype html
html(lang="en")
    head
        title API | Granim.js
        meta(name='description', content='API for granim.js. Gradients animations in javascript.')
        include includes/head
        link(type='text/css', rel='stylesheet', href='assets/css/prism.css')

    body.api
        header.main-header
            .container.clearfix
                .bloc-logo
                    canvas#logo-canvas
                    a.logo-mask(href='index.html') Granim.js
                .main-nav
                    .hamburger-icon
                        span
                        span
                        span
                        span
                        span
                        span

                    nav
                        ul.clearfix
                            li
                                a.text(href='https://github.com/sarcadass/granim.js/releases', target='_blank', rel='external') Download
                            li
                                a.text.active(href='api.html') API
                            li
                                a.text(href='examples.html') Examples
                            li
                                a.github(href='https://github.com/sarcadass/granim.js', target='_blank', title='Github', rel='external')
                                    include includes/github-logo.html

        .main-content
            .container.bloc
                h1 API
                h2 options
                p All the global options available.
                table.api-list
                    thead
                        tr
                            th Property
                            th Default
                            th Type
                            th Description
                    tbody
                        tr
                            td element <span class="required">(required)</span>
                            td /
                            td String
                            td
                                | A CSS selector for the &lt;canvas&gt; element (e.g. <span class="snippet">'#granim-canvas'</span>)
                                | that will be used for the gradient animation.
                        tr
                            td name
                            td false
                            td String
                            td
                                | This is the prefix used for the dark / light class name added
                                | on the <span class="snippet">options.elToSetClassOn</span> element depending on the average gradient lightness,
                                | the class will be updated during the animation.
                                | If you don't set a name, the class won't be set.
                        tr
                            td elToSetClassOn
                            td 'body'
                            td String
                            td
                                | The element to set the dark / light class on (e.g. <span class="snippet">'#canvas-wrapper'</span>).
                                | Is useful only if you set a <span class="snippet">options.name</span>.
                        tr
                            td direction
                            td 'diagonal'
                            td String
                            td The orientation of the gradient, you can choose between:
                                ul
                                    li
                                        span.snippet 'diagonal'
                                    li
                                        span.snippet 'left-right'
                                    li
                                        span.snippet 'top-bottom'
                                    li
                                        span.snippet 'radial'
                        tr
                            td isPausedWhenNotInView
                            td false
                            td Boolean
                            td
                                | Does the animation stop when it's not in window view?<br>
                                | (Despite this parameter, the animation always pause
                                | when changing tab).
                        tr
                            td opacity <span class="required">(required)</span>
                            td /
                            td Array of Int
                            td
                                | You can adapt the opacity of each color of the gradient.<br>
                                | if you have two colors <span class="snippet">[1, .5]</span>,
                                | or three <span class="snippet">[1, .5, 1]</span>...
                        tr
                            td stateTransitionSpeed
                            td 1000
                            td Int
                            td Duration of the animation when changing state.
                        tr
                            td defaultStateName
                            td 'default-state'
                            td String
                            td The name of the default state.
                        tr
                            td states <span class="required">(required)</span>
                            td /
                            td Object
                            td Object containing all the states, see more info below.


            .container.bloc
                h2 options.states
                p
                    | All the options available to customize the states and
                    | the different gradients.<br>
                    | Create a state with the name you want then add these parameters.<br>
                    | By default, the name of your first state is <span class="snippet">'default-state'</span>, you can change it with <span class="snippet">options.defaultStateName</span>.
                table.api-list
                    thead
                        tr
                            th Property
                            th Default
                            th Type
                            th Description
                    tbody
                        tr
                            td gradients <span class="required">(required)</span>
                            td /
                            td Array of Arrays
                            td
                                | The different gradients with the different colors
                                | e.g. <span class="snippet">[ ['#FFF', '#000'],
                                | ['#000', '#FFF'] ]</span>.<br>
                                | The array can contain only one gradient.
                        tr
                            td transitionSpeed
                            td 5000
                            td Int
                            td Transition duration between each gradient.
                        tr
                            td loop
                            td true
                            td Boolean
                            td When the animation has arrived to the last gradient, does it repeat?


            .container.bloc
                h2 Callbacks
                p You can set callbacks.
                table.api-list
                    thead
                        tr
                            th Property
                            th Default
                            th Type
                            th Description
                    tbody
                        tr
                            td onStart
                            td false
                            td Function
                            td Triggered when the animation start.
                        tr
                            td onGradientChange
                            td false
                            td Function
                            td Triggered when a gradient change and loop.
                        tr
                            td onEnd
                            td false
                            td Function
                            td Triggered when the animation end.

            .container.bloc
                h2 Emitted events
                p Granim will emit events you can listen to at key moments.
                pre
                    code.language-js
                        | // You can listen to these events:
                        | // - granim:start
                        | // - granim:end
                        | // - granim:loop
                        | // - granim:gradientChange
                        | <br>
                        | // js
                        | var canvasElement = document.querySelector('#granim-canvas');
                        | canvasElement.addEventListener('granim:start', function(event) {
                        |     console.log(event);
                        | });
                        | <br>
                        | // with jQuery
                        | $('#granim-canvas').on('granim:start', function(event) {
                        |     console.log(event);
                        | })

            .container.bloc
                h2 Methods
                p Methods to control the gradients.
                pre
                    code.language-js
                        | // Change state by putting its name in the argument
                        | granimInstance.changeState('state-name');
                        | <br>
                        | // Play the animation
                        | granimInstance.play();
                        | <br>
                        | // Pause the animation
                        | granimInstance.pause();
                        | <br>
                        | // Stop the animation and clear the gradient
                        | granimInstance.clear();

            .container.bloc
                h2 Basic configuration
                p Basic configuration with two states and callbacks set.
                pre
                    code.language-js
                        | var granimInstance = new Granim({
                        |     element: '',
                        |     name: 'granim',
                        |     elToSetClassOn: 'body',
                        |     direction: 'diagonal',
                        |     isPausedWhenNotInView: false,
                        |     opacity: [1, 1],
                        |     stateTransitionSpeed: 1000,
                        |     states : {
                        |         "default-state": {
                        |             gradients: [
                        |                 ['#834d9b', '#d04ed6'],
                        |                 ['#1CD8D2', '#93EDC7']
                        |             ],
                        |             transitionSpeed: 5000,
                        |             loop: true
                        |         },
                        |         "dark-state": {
                        |             gradients: [
                        |                 ['#757F9A', '#D7DDE8'],
                        |                 ['#5C258D', '#4389A2']
                        |             ],
                        |             transitionSpeed: 5000,
                        |             loop: true
                        |         }
                        |     },
                        |     onStart: function() {
                        |         console.log('Granim: onStart');
                        |     },
                        |     onGradientChange: function(colorDetails) {
                        |         console.log('Granim: onGradientChange, details: ');
                        |         console.log(colorDetails);
                        |     },
                        |     onEnd: function() {
                        |         console.log('Granim: onEnd');
                        |     }
                        | );
                p
                    | You can use more than 2 colors for the gradients,
                    | but cannot have different length of colors in the
                    | different states. you will also have to
                    | <strong>adapt the opacity</strong>.
                pre
                    code.language-js
                        | var granimInstance = new Granim({
                        |     element: '',
                        |     name: 'granim',
                        |     elToSetClassOn: 'body',
                        |     direction: 'diagonal',
                        |     isPausedWhenNotInView: false,
                        |     opacity: [1, 1, .5, 1],
                        |     stateTransitionSpeed: 1000,
                        |     states : {
                        |         "default-state": {
                        |             gradients: [
                        |                 ['#834d9b', '#d04ed6', '#1CD8D2', '#93EDC7'],
                        |                 ['#1CD8D2', '#93EDC7', '#757F9A', '#4389A2']
                        |             ],
                        |             transitionSpeed: 5000,
                        |             loop: true
                        |         },
                        |         "dark-state": {
                        |             gradients: [
                        |                 ['#757F9A', '#D7DDE8', '#1CD8D2', '#93EDC7'],
                        |                 ['#5C258D', '#4389A2', '#1CD8D2', '#93EDC7']
                        |             ],
                        |             transitionSpeed: 5000,
                        |             loop: true
                        |         }
                        |     }
                        | );

            include includes/footer

        script(src='assets/js/vendor/jquery-3.1.0.min.js')
        script(src='assets/js/vendor/granim.min.js')
        script(src='assets/js/vendor/prism.js')
        script(type='text/javascript').
            var pageId = 'api';
        script(src='assets/js/script.js')
        script(type='text/javascript').
            (function(i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r;
                i[r] = i[r] || function() {
                            (i[r].q = i[r].q || []).push(arguments)
                        }, i[r].l = 1 * new Date();
                a = s.createElement(o),
                        m = s.getElementsByTagName(o)[0];
                a.async = 1;
                a.src = g;
                m.parentNode.insertBefore(a, m)
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');
            ga('create', 'UA-83387901-1', 'auto');
            ga('send', 'pageview');
